var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

window.Raffler = {
  Models: {},
  Collections: {},
  Views: {},
  Routers: {},
  init: function() {
    console.log('Hello from Backbone!');
    new Raffler.Routers.Entries;
    return Backbone.history.start();
  }
};

Raffler.Views.EntriesIndex = (function(_super) {

  __extends(EntriesIndex, _super);

  function EntriesIndex() {
    return EntriesIndex.__super__.constructor.apply(this, arguments);
  }

  EntriesIndex.prototype.template = _.template($('#item-template').html());

  EntriesIndex.prototype.events = {
    'click #new': 'createEntry',
    'click #draw': 'drawWinner',
    'click #reset': 'resetWinner',
    'click li': 'kill'
  };

  EntriesIndex.prototype.initialize = function() {
    this.collection.on('sync', this.render, this);
    this.collection.on('add', this.render, this);
    return this.collection.on('destroy', this.render, this);
  };

  EntriesIndex.prototype.render = function() {
    $(this.el).html(this.template({
      entries: this.collection.toJSON()
    }));
    return this;
  };

  EntriesIndex.prototype.createEntry = function() {
    return this.collection.create({
      name: $('#new_entry').val()
    });
  };

  EntriesIndex.prototype.drawWinner = function() {
    return this.collection.drawWinner();
  };

  EntriesIndex.prototype.drawWinner = function() {
    var winner;
    winner = this.collection.shuffle()[0];
    if (winner) {
      winner.set({
        winner: true
      });
      return winner.save();
    }
  };

  EntriesIndex.prototype.kill = function(ev) {
    var item;
    console.log($(ev.target).attr('id'));
    item = this.collection.find(function(model) {
      return model.get("id") === $(ev.target).attr('id');
    });
    return item.destroy();
  };

  EntriesIndex.prototype.resetWinner = function() {
    return this.collection.each(function(model, index) {
      model.set({
        winner: false
      });
      return model.save();
    });
  };

  return EntriesIndex;

})(Backbone.View);

Raffler.Routers.Entries = (function(_super) {

  __extends(Entries, _super);

  function Entries() {
    return Entries.__super__.constructor.apply(this, arguments);
  }

  Entries.prototype.routes = {
    '': 'index',
    'entries/:id': 'show'
  };

  Entries.prototype.initialize = function() {
    this.collection = new Raffler.Collections.Entries([
      {
        id: 1,
        name: "kip",
        winner: false
      }, {
        id: 2,
        name: "dwight",
        winner: true
      }
    ]);
    return this.collection.fetch();
  };

  Entries.prototype.index = function() {
    var view;
    view = new Raffler.Views.EntriesIndex({
      collection: this.collection
    });
    return $('#container').html(view.render().el);
  };

  Entries.prototype.show = function(id) {
    return console.log("Entry " + id);
  };

  return Entries;

})(Backbone.Router);

Raffler.Models.Entry = (function(_super) {

  __extends(Entry, _super);

  function Entry() {
    return Entry.__super__.constructor.apply(this, arguments);
  }

  Entry.prototype.defaults = {
    name: 'Dwight',
    winner: false
  };

  return Entry;

})(Backbone.Model);

Raffler.Collections.Entries = (function(_super) {

  __extends(Entries, _super);

  function Entries() {
    return Entries.__super__.constructor.apply(this, arguments);
  }

  Entries.prototype.model = Raffler.Models.Entry;

  Entries.prototype.localStorage = new Store("backbone-coffee-raffle-reset");

  return Entries;

})(Backbone.Collection);

$(document).ready(function() {
  return Raffler.init();
});

